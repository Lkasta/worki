// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Use "postgresql" como o provider para PostgreSQL
  url      = env("DATABASE_URL") // Pode especificar a URL de conexão do banco de dados PostgreSQL
}

model Room {
  id_room       Int     @id @default(autoincrement())
  name          String  @default(value: "")
  description   String
  city          String
  postalCode    String
  neighborhood  String
  address       String
  addressNumber String
  district      String
  price         Decimal // Use o tipo Decimal para valores monetários
  complement    String
  rating        Float
  image1        String
  image2        String
  image3        String

  RentReserve   RentReserve[]
  Room_Services RoomServices[]
  Feedback      Feedback[]
}

model User {
  id_user  Int    @id @default(autoincrement())
  username String
  email    String @unique
  password String
  cpf      String

  RentReserve RentReserve[]
  Feedback    Feedback[]
}

model RentReserve {
  id_rent_reserve      Int      @id @default(autoincrement())
  id_user              Int
  id_room              Int
  data_initial_reserve DateTime
  data_final_reserve   DateTime
  canceled             Boolean

  user User @relation(fields: [id_user], references: [id_user])
  room Room @relation(fields: [id_room], references: [id_room])
}

model Services {
  id_service  Int    @id @default(autoincrement())
  description String
  icon        String

  Room_Services RoomServices[]
}

model RoomServices {
  id_room_service Int @id @default(autoincrement())
  id_room         Int
  id_service      Int

  room    Room     @relation(fields: [id_room], references: [id_room])
  service Services @relation(fields: [id_service], references: [id_service])
}

model Feedback {
  id_feedback Int    @id @default(autoincrement())
  id_user     Int
  id_room     Int
  feedback    String
  // Adicione outros campos importantes, se necessário

  user User @relation(fields: [id_user], references: [id_user])
  room Room @relation(fields: [id_room], references: [id_room])
}
